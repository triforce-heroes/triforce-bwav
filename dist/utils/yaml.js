import e,{writeFileSync as t}from"node:fs";import{Pair as a,Scalar as n,YAMLMap as r,YAMLSeq as s,parseDocument as f,stringify as o}from"yaml";import{HashTag as d}from"../tags/HashTag.js";import{Unsigned as m,UnsignedTag as w}from"../tags/UnsignedTag.js";import{root as l}from"./path.js";import{createTemporaryFile as u}from"./temp.js";export const resources=f(e.readFileSync(l("fixtures/bwav-resources.yaml")).toString(),{customTags:[d,w]});export const resourcesHashes=Object.fromEntries(resources.contents.items.map(e=>{let t=e.value;return[t.items.find(e=>"Hash"===e.key.value).value.value.value,t]}));let p=[{contextOffset:84,parameterOffset:32,sampleNumOffset:24,waveDataOffset:64},{contextOffset:160,parameterOffset:108,sampleNumOffset:100,waveDataOffset:140}];export function resourceADPCMSet(e,t){let f=new s;for(let e of p){let s=new n(t.subarray(e.contextOffset,e.contextOffset+6).toString("base64"));s.tag="!!binary";let o=new n(t.subarray(e.parameterOffset,e.parameterOffset+32).toString("base64"));o.tag="!!binary";let d=new n(new m(t.readUInt32LE(e.sampleNumOffset)));d.tag="!u";let w=new n(new m(t.readUInt32LE(e.waveDataOffset)));w.tag="!u";let l=new r;l.flow=!0,l.add(new a("AdpcmContext",s)),l.add(new a("AdpcmParameter",o)),l.add(new a("SampleNum",d)),l.add(new a("WaveDataOffset",w)),f.add(l)}e.add(new a("ChannelInfo",f),!0);let o=new n(new m(t.readUInt32LE(8)));o.tag="!u",e.add(new a("Hash",o),!0)}export function resourceLopusSet(e,t,f,o){let d=new s,w=new n(new m(f));w.tag="!u";let l=new n(new m(t.readUInt32LE(64)));l.tag="!u";let u=new r;if(u.flow=!0,u.add(new a("SampleNum",w)),u.add(new a("WaveDataOffset",l)),d.add(u),2===o){let e=new n(new m(t.readUInt32LE(140)));e.tag="!u";let s=new r;s.flow=!0,s.add(new a("SampleNum",w)),s.add(new a("WaveDataOffset",e)),d.add(s)}e.add(new a("ChannelInfo",d),!0);let p=new n(new m(t.readUInt32LE(8)));p.tag="!u",e.add(new a("Hash",p),!0)}export function resourcesWrite(){let e=u("yaml");return t(e,o(resources,{customTags:[d,w,"binary"]})),e}